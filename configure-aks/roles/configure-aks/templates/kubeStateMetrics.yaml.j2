---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ configuration.kubeStateMetrics.name }}
  namespace: {{ configuration.kubeStateMetrics.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ configuration.kubeStateMetrics.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ configuration.kubeStateMetrics.name }}
subjects:
- kind: ServiceAccount
  name: {{ configuration.kubeStateMetrics.name }}
  namespace: {{ configuration.kubeStateMetrics.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ configuration.kubeStateMetrics.name }}
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs: ["list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs: ["list", "watch"]
- apiGroups: ["apps"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs: ["list", "watch"]
- apiGroups: ["batch"]
  resources:
  - cronjobs
  - jobs
  verbs: ["list", "watch"]
- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]
- apiGroups: ["policy"]
  resources:
  - poddisruptionbudgets
  verbs: ["list", "watch"]
- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ configuration.kubeStateMetrics.name }}
  namespace: {{ configuration.kubeStateMetrics.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ configuration.kubeStateMetrics.name }}-resizer
subjects:
- kind: ServiceAccount
  name: {{ configuration.kubeStateMetrics.name }}
  namespace: {{ configuration.kubeStateMetrics.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ configuration.kubeStateMetrics.namespace }}
  name: {{ configuration.kubeStateMetrics.name }}-resizer
rules:
- apiGroups: [""]
  resources:
  - pods
  verbs: ["get"]
- apiGroups: ["apps"]
  resources:
  - deployments
  resourceNames: ["kube-state-metrics"]
  verbs: ["get", "update"]
- apiGroups: ["extensions"]
  resources:
  - deployments
  resourceNames: ["kube-state-metrics"]
  verbs: ["get", "update"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ configuration.kubeStateMetrics.name }}
  namespace: {{ configuration.kubeStateMetrics.namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ configuration.kubeStateMetrics.name }}
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: {{ configuration.kubeStateMetrics.name }}
    spec:
      serviceAccountName: {{ configuration.kubeStateMetrics.name }}
      containers:
      - name: {{ configuration.kubeStateMetrics.name }}
        image: quay.io/coreos/kube-state-metrics:{{ configuration.kubeStateMetrics.version }}
        ports:
        - name: http-metrics
          containerPort: 8080
        - name: telemetry
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
      - name: addon-resizer
        image: k8s.gcr.io/addon-resizer:1.8.3
        resources:
          limits:
            cpu: 150m
            memory: 50Mi
          requests:
            cpu: 150m
            memory: 50Mi
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - /pod_nanny
          - --container=kube-state-metrics
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=100Mi
          - --extra-memory=2Mi
          - --threshold=5
          - --deployment=kube-state-metrics
---
apiVersion: v1
kind: Service
metadata:
  name: {{ configuration.kubeStateMetrics.name }}
  namespace: {{ configuration.kubeStateMetrics.namespace }}
  labels:
    k8s-app: {{ configuration.kubeStateMetrics.name }}
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  - name: telemetry
    port: 8081
    targetPort: telemetry
    protocol: TCP
  selector:
    k8s-app: {{ configuration.kubeStateMetrics.name }}