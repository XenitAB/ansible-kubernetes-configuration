- name: Set fact for nginxIngress tempdir
  set_fact:
    nginxIngressTempDir: "/tmp/nginxIngress-{{ ansible_date_time.iso8601_basic_short }}"
  tags:
    - nginxIngress

- name: Download and apply helm template
  block:
    - name: Add nginxIngress namespace
      k8s:
        kubeconfig: "{{ configuration.k8sconfiguration.dest }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ configuration.nginxIngress.namespace }}"
            labels: "{{ configuration.nginxIngress.labels | combine({'name': configuration.nginxIngress.namespace}) }}"
      when: configuration.nginxIngress.state == "present"
      tags:
        - nginxIngress

    - name: Helm init
      shell: "{{ helm.binDir }}/helm init --client-only"
      tags:
        - nginxIngress

    - name: Helm repo update
      shell: "{{ helm.binDir }}/helm repo update"
      tags:
        - nginxIngress

    - name: Fetch helm chart for nginxIngress
      shell: "{{ helm.binDir }}/helm fetch --untar --untardir {{ nginxIngressTempDir }} --version {{ configuration.nginxIngress.helmChartVersion }} stable/{{ configuration.nginxIngress.helmChartName }}"
      tags:
        - nginxIngress

    - name: Generate kubernetes manifest for nginxIngress
      shell: '{{ helm.binDir }}/helm template "{{ nginxIngressTempDir }}/{{ configuration.nginxIngress.helmChartName }}" --name {{ configuration.nginxIngress.helmChartName }} --namespace {{ configuration.nginxIngress.namespace }} --set controller.publishService.enabled=true > {{ nginxIngressTempDir }}/nginxIngress.yaml'
      tags:
        - nginxIngress

    - name: Install nginxIngress
      shell: '{{ kubectl.bin_directory }}/kubectl --kubeconfig="{{ configuration.k8sconfiguration.dest }}" --namespace {{ configuration.nginxIngress.namespace }} apply -f "{{ nginxIngressTempDir }}/nginxIngress.yaml"'
      when: configuration.nginxIngress.state == "present"
      register: nginxIngressManifestResult
      retries: 5
      delay: 5
      until: nginxIngressManifestResult is succeeded
      tags:
        - nginxIngress

    - name: Remove nginxIngress
      shell: '{{ kubectl.bin_directory }}/kubectl --kubeconfig="{{ configuration.k8sconfiguration.dest }}" delete --ignore-not-found=true -f "{{ nginxIngressTempDir }}/nginxIngress.yaml"'
      when: configuration.nginxIngress.state == "absent"
      tags:
        - nginxIngress

    - name: Remove nginxIngress namespace
      k8s:
        kubeconfig: "{{ configuration.k8sconfiguration.dest }}"
        state: absent
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ configuration.nginxIngress.namespace }}"
      when: configuration.nginxIngress.state == "absent"
      tags:
        - nginxIngress

    - name: Delete temporary local folder
      file:
        path: "{{ nginxIngressTempDir }}/"
        state: absent
      changed_when: false
      tags:
        - nginxIngress

  rescue:
    - name: Delete temporary local folder
      file:
        path: "{{ nginxIngressTempDir }}/"
        state: absent
      changed_when: false
      tags:
        - nginxIngress

    - name: Fail task
      fail:
        msg: "Rescue was invoked, task failed."
      tags:
        - nginxIngress
